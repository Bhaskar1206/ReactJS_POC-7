[{"G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\index.js":"1","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\App.js":"2","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\HomePage.js":"3","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\LoginPage.js":"4","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\MenuPage.js":"5","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\NavBar.js":"6","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\tileData.js":"7","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\DrawerComponent.js":"8"},{"size":150,"mtime":1608277557832,"results":"9","hashOfConfig":"10"},{"size":539,"mtime":1608277857664,"results":"11","hashOfConfig":"10"},{"size":4671,"mtime":1608822506399,"results":"12","hashOfConfig":"10"},{"size":5026,"mtime":1608277813947,"results":"13","hashOfConfig":"10"},{"size":2496,"mtime":1608636185117,"results":"14","hashOfConfig":"10"},{"size":3949,"mtime":1608652100648,"results":"15","hashOfConfig":"10"},{"size":1583,"mtime":1608277813951,"results":"16","hashOfConfig":"10"},{"size":5487,"mtime":1608794983878,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"172fzyi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\index.js",[],["39","40"],"G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\App.js",[],"G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\HomePage.js",["41"],"G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\LoginPage.js",["42"],"import React from 'react';\r\n\r\nimport {useHistory} from 'react-router-dom';\r\nimport {makeStyles,ThemeProvider} from '@material-ui/core/styles'\r\nimport { Button, createMuiTheme, FormControl, IconButton, Input, InputAdornment, TextField } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport Fingerprint from '@material-ui/icons/Fingerprint';\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport {green} from '@material-ui/core/colors'\r\n\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyle = makeStyles((theme) =>({\r\n    root : {\r\n       width:'580px',\r\n    },\r\n    box:{\r\n\r\n        paddingTop:'100px',\r\n        textAlign:'center',\r\n        backgroundColor:\"white\",\r\n        \r\n       \r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n      },\r\n   \r\n    margin: {\r\n        paddingTop:'10px',\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel:{\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField : {\r\n        width:'25ch',\r\n    }\r\n}))\r\n\r\nconst theme = createMuiTheme({\r\n    palette:{\r\n        primary:green,\r\n    },\r\n})\r\n\r\nfunction LoginPage(){\r\n    const history = useHistory();\r\n    const classes = useStyle();\r\n    const [values,setValues] = React.useState({\r\n        userName:'',\r\n        password:'',\r\n        showPassword:false,\r\n    });\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(values.userName===\"Bhaskar\" && values.password===\"123\"){\r\n            history.push(`/home`);\r\n        }else if(values.username===\"\" && values.password===\"\"){\r\n            history.push(`/`);\r\n        }else{\r\n            history.push(`/error`);\r\n        }\r\n    }\r\n    const handleChange =(prop) =>(event) => {\r\n        setValues({...values,[prop]: event.target.value});\r\n        console.log(values);\r\n    }\r\n    const handleClickShowPassword =() => {\r\n        setValues({...values,showPassword: !values.showPassword});\r\n    }\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    }\r\n    return(\r\n        <div className={classes.box}>\r\n            <h1 >Loggin</h1>\r\n            <FormControl className={classes.margin}>\r\n                \r\n                <ThemeProvider theme={theme}>\r\n                    <TextField\r\n                        id=\"userName\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"UserName\"\r\n                        values={values.userName}\r\n                        onChange={handleChange('userName')}\r\n                        InputProps={{\r\n                            startAdornment:(\r\n                                <InputAdornment position=\"start\">\r\n                                    <AccountCircle></AccountCircle>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                </ThemeProvider>\r\n            </FormControl>\r\n            <FormControl className={classes.margin}>\r\n                <ThemeProvider theme={theme}>\r\n                    <TextField\r\n                        id=\"password\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Password\"\r\n                        type={values.showPassword? 'text' : 'password'}\r\n                        values={values.password}\r\n                        onChange={handleChange('password')}\r\n                        InputProps={{\r\n                            startAdornment:(\r\n                                <InputAdornment position=\"start\">\r\n                                    <Fingerprint></Fingerprint>\r\n                                </InputAdornment>\r\n                            ),\r\n                            endAdornment:(\r\n                                <InputAdornment position =\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"password\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {values.showPassword ? <Visibility/> :<VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></TextField>\r\n                </ThemeProvider>\r\n            </FormControl>\r\n            \r\n            <div>\r\n                <Button \r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleSubmit}\r\n                className={classes.root}\r\n                >Submit</Button>\r\n            </div>\r\n           \r\n            \r\n        </div>\r\n    )\r\n    }\r\n    export default LoginPage;","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\MenuPage.js",["43"],"import React from 'react';\r\nimport {createMuiTheme, makeStyles   } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\n\r\n\r\nimport NavBar from '../NavBar'\r\nimport DrawerComponent from '../DrawerComponent'\r\nimport tileData from './tileData';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        display : 'flex',\r\n        flexWrap:'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow:'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList : {\r\n        textAlign:\"center\",\r\n        transform:'translateZ(0)',\r\n    },\r\n    titleBar:{\r\n        background:\r\n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n\r\n    },\r\n    icon: {\r\n        color:'white',\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction MenuPage(){\r\n\r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    return(\r\n        <div className={classes.gridList}>\r\n            <NavBar></NavBar>\r\n            <DrawerComponent></DrawerComponent>\r\n            <h1>This is The Full List</h1>\r\n            <GridList celHeight={260} className={classes.gridList} cols={3}>\r\n                <GridListTile key= \"Subheader\" cols={4} style={{height : 'auto'}}>\r\n                    <ListSubheader component=\"div\"></ListSubheader>\r\n                </GridListTile>\r\n                {tileData.map((tile) => (\r\n                    <GridListTile key={tile.img}>\r\n                    <img src={tile.img} alt={tile.title}/>\r\n                    <GridListTileBar\r\n                        title={tile.title}\r\n                        subtitle={<span>by: {tile.author}</span>}\r\n                        actionIcon ={ \r\n                                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\r\n                                    <StarBorderIcon/>\r\n                                </IconButton>\r\n                        }\r\n                        actionPosition=\"left\"\r\n                        className={classes.titleBar}\r\n                        />\r\n                   </GridListTile>     \r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    )\r\n}\r\nexport default MenuPage","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\NavBar.js",["44","45","46"],"import React from 'react';\r\nimport {Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BottomNavigation, BottomNavigationAction, colors } from '@material-ui/core';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    box:{\r\n        textAlign:\"center\",\r\n        size:\"small\"\r\n        \r\n    },\r\n    small: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n    root : {\r\n        display:'flex',\r\n        flexWrap:'wrap',\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n        width:'25ch'\r\n    },\r\n    withoutLabel:{\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField : {\r\n        width:'25ch',\r\n    }\r\n}))\r\n\r\n \r\n\r\nfunction NavBar() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const [anchorEl , setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose =() => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <BottomNavigation\r\n                \r\n                value={value}\r\n                onChange={(event, newValue)=> {\r\n                setValue(newValue);\r\n                }}\r\n                showLabels     \r\n                    \r\n            >\r\n                <BottomNavigationAction component={Link} to=\"/home\" label=\"Home\" icon={<HomeIcon></HomeIcon>}></BottomNavigationAction>\r\n                <BottomNavigationAction component={Link} to=\"/menu\" label=\"List\" icon={<MenuIcon></MenuIcon>}></BottomNavigationAction>\r\n                <BottomNavigationAction component={Link}  label=\"Location\" icon={<LocationOnIcon/>}></BottomNavigationAction>\r\n                <BottomNavigationAction aria-controls=\"simple-menu\" label=\"Account\" aria-haspopup=\"true\" onClick={handleClick} icon={<AccountCircleIcon></AccountCircleIcon>}></BottomNavigationAction>\r\n                    <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    >\r\n                        <MenuItem > <PersonIcon/></MenuItem>\r\n                        <MenuItem><SettingsIcon/></MenuItem>\r\n                        <MenuItem component={Link} to=\"/\"><PowerSettingsNewIcon/></MenuItem>\r\n                    </Menu>\r\n            </BottomNavigation>\r\n           \r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\nexport default NavBar;\r\n\r\n\r\n{/*<List>\r\n                        <ListItem>\r\n                            <ListItemIcon><PersonIcon/></ListItemIcon>\r\n                            <ListItemText>Account</ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemIcon><TransferWithinAStationIcon/></ListItemIcon>\r\n                            <ListItemText>My Trip</ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemIcon><SettingsIcon/></ListItemIcon>\r\n                            <ListItemText>Settings</ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon>\r\n                            <ListItemText>Logout</ListItemText>\r\n                        </ListItem>\r\n                    \r\n</List>*/}","G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\pages\\tileData.js",[],"G:\\FullStack\\ReactJS\\frontend\\webapp-poc-3\\src\\component\\DrawerComponent.js",["47","48","49"],"import React from 'react';\r\nimport {Link } from 'react-router-dom'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport clsx from 'clsx';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport {makeStyles,useTheme} from '@material-ui/core/styles';\r\nimport { AppBar, CssBaseline, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from '@material-ui/core';\r\nimport { FormatColorTextSharp } from '@material-ui/icons';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction DrawerComponent(){\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const clickButton = () => {\r\n      \r\n      <button>yes</button>\r\n      \r\n    }\r\n\r\n    const handleDrawrOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <CssBaseline></CssBaseline>\r\n            <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n            })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawrOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, open && classes.hide)}\r\n                    ><MenuIcon></MenuIcon>\r\n                </IconButton>\r\n                <Typography variant =\"h6\" noWrap>\r\n                        Menu\r\n                </Typography>\r\n            </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistant\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                        <ListItem button onClick={() => { clickButton()}}>\r\n                            <ListItemIcon><PersonIcon/></ListItemIcon>\r\n                            <ListItemText>Account</ListItemText>\r\n                        </ListItem>\r\n                        <ListItem button >\r\n                            <ListItemIcon><TransferWithinAStationIcon/></ListItemIcon>\r\n                            <ListItemText>My Trip</ListItemText>\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon><SettingsIcon/></ListItemIcon>\r\n                            <ListItemText>Settings</ListItemText>\r\n                        </ListItem>\r\n                        <ListItem button component={Link} to=\"/\">\r\n                            <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon>\r\n                            <ListItemText>Logout</ListItemText>\r\n                        </ListItem>\r\n                    \r\n                </List>\r\n                <Divider />\r\n       \r\n            </Drawer>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default DrawerComponent;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":14},{"ruleId":"54","severity":1,"message":"58","line":5,"column":59,"nodeType":"56","messageId":"57","endLine":5,"endColumn":64},{"ruleId":"54","severity":1,"message":"59","line":2,"column":9,"nodeType":"56","messageId":"57","endLine":2,"endColumn":23},{"ruleId":"54","severity":1,"message":"60","line":4,"column":52,"nodeType":"56","messageId":"57","endLine":4,"endColumn":58},{"ruleId":"54","severity":1,"message":"61","line":44,"column":11,"nodeType":"56","messageId":"57","endLine":44,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":91,"column":1,"nodeType":"64","messageId":"65","endLine":109,"endColumn":11},{"ruleId":"54","severity":1,"message":"66","line":10,"column":10,"nodeType":"56","messageId":"57","endLine":10,"endColumn":30},{"ruleId":"54","severity":1,"message":"67","line":13,"column":8,"nodeType":"56","messageId":"57","endLine":13,"endColumn":17},{"ruleId":"54","severity":1,"message":"68","line":20,"column":8,"nodeType":"56","messageId":"57","endLine":20,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'createMuiTheme' is defined but never used.","'colors' is defined but never used.","'classes' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'FormatColorTextSharp' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]